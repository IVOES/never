/**
 * functional programming language
 * syntactically scoped
 * first class functions
 * call by value
 */
func min(float a, float b, float c) -> float
{
    return a < b ? a : b * c;
}

func minCoeff(float p1, float p2, float coeff) -> float
{
    func min(float n_a, float n_b) -> float
    {
        return coeff * (n_a < n_b ? coeff * n_a : coeff * n_b);
    }

    return min(10 * 20, 30 * 60);
}

func crazy(float a, float, () -> float, funcZ(float, float) -> (float) -> () -> float) -> float
{
    return 0;
}

func prfloat(void_func(float, float, float) -> float) -> float
{
    return println(minCoeff(10, 20, 30));
}

func my_func(float a, float b, float c) -> float
{
    return 2 * minCoeff(2, a, b);
}

func void_func() -> float
{
    return 0 < 0 ? 0 : 10;
}

func main() -> float
{
    return prfloat(my_func);
}

