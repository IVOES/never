/**
 * functional programming language
 * syntactically scoped
 * first class functions
 * call by value
 */
func min(int a, int b, int c) -> int
{
    return a < b ? a : b * c;
}

func minCoeff(int p1, int p2, int coeff) -> int
{
    func min(int n_a, int n_b) -> int
    {
        return coeff * (n_a < n_b ? coeff * n_a : coeff * n_b);
    }

    return min(10 * 20, 30 * 60);
}

func crazy(int a, int, () -> int, funcZ(int, int) -> (int) -> () -> int) -> int
{
    return 0;
}

func print(void_func(int, int, int) -> int) -> (int, int, int) -> int
{
    return minCoeff;
}

func my_func(int a, int b, int c) -> int
{
    return 2 * minCoeff(2, a, b);
}

func void_func() -> int
{
    return 0 < 0 ? 0 : 10;
}

func main() -> (int, int, int) -> int
{
    return print(my_func);
}

