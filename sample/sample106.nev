
func twice(e -> int) -> int
{
    return print(2 * e); 
}

func foreachTab( tab[dim] -> int, each(e -> int) -> int ) -> int
{
    func __foreachTab( val -> int, i -> int, tab[dim] -> int ) -> int
    {
        return i < dim ? __foreachTab( each(tab[i]), i + 1, tab) : i;
    }
    return __foreachTab(0, 0, tab);
}

func foreach2Tab( tab[dim] -> [D] -> int, eachTab(t[D] -> int, (int) -> int) -> int, each(e -> int) -> int ) -> int
{
    func __foreach2Tab( val -> int, i -> int, tab[dim] -> [D] -> int ) -> int
    {
        return i < dim ? __foreach2Tab( eachTab(tab[i], each), i + 1, tab ) : i;
    }
    return __foreach2Tab(0, 0, tab);
}

func main() -> int
{
    return foreach2Tab( [ [ 1, 2, 3, 4, 5, 6 ] -> int,
                          [ 16, 17, 18 ] -> int ] -> [D] -> int,
                        foreachTab, twice );
}

